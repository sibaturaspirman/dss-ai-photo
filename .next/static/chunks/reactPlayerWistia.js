"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["reactPlayerWistia"],{

/***/ "(app-pages-browser)/./node_modules/react-player/lib/players/Wistia.js":
/*!*********************************************************!*\
  !*** ./node_modules/react-player/lib/players/Wistia.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toESM = (mod, isNodeMode, target)=>(target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(// If the importer is in node compatibility mode or this is not an ESM\n    // file that has been converted to a CommonJS file using a Babel-\n    // compatible transform (i.e. \"__esModule\" has not been set), then set\n    // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n    isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n        value: mod,\n        enumerable: true\n    }) : target, mod));\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\nvar __publicField = (obj, key, value)=>{\n    __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n    return value;\n};\nvar Wistia_exports = {};\n__export(Wistia_exports, {\n    default: ()=>Wistia\n});\nmodule.exports = __toCommonJS(Wistia_exports);\nvar import_react = __toESM(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nvar import_utils = __webpack_require__(/*! ../utils */ \"(app-pages-browser)/./node_modules/react-player/lib/utils.js\");\nvar import_patterns = __webpack_require__(/*! ../patterns */ \"(app-pages-browser)/./node_modules/react-player/lib/patterns.js\");\nconst SDK_URL = \"https://fast.wistia.com/assets/external/E-v1.js\";\nconst SDK_GLOBAL = \"Wistia\";\nconst PLAYER_ID_PREFIX = \"wistia-player-\";\nclass Wistia extends import_react.Component {\n    componentDidMount() {\n        this.props.onMount && this.props.onMount(this);\n    }\n    load(url) {\n        const { playing, muted, controls, onReady, config, onError } = this.props;\n        (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL).then((Wistia2)=>{\n            if (config.customControls) {\n                config.customControls.forEach((control)=>Wistia2.defineControl(control));\n            }\n            window._wq = window._wq || [];\n            window._wq.push({\n                id: this.playerID,\n                options: {\n                    autoPlay: playing,\n                    silentAutoPlay: \"allow\",\n                    muted,\n                    controlsVisibleOnLoad: controls,\n                    fullscreenButton: controls,\n                    playbar: controls,\n                    playbackRateControl: controls,\n                    qualityControl: controls,\n                    volumeControl: controls,\n                    settingsControl: controls,\n                    smallPlayButton: controls,\n                    ...config.options\n                },\n                onReady: (player)=>{\n                    this.player = player;\n                    this.unbind();\n                    this.player.bind(\"play\", this.onPlay);\n                    this.player.bind(\"pause\", this.onPause);\n                    this.player.bind(\"seek\", this.onSeek);\n                    this.player.bind(\"end\", this.onEnded);\n                    this.player.bind(\"playbackratechange\", this.onPlaybackRateChange);\n                    onReady();\n                }\n            });\n        }, onError);\n    }\n    unbind() {\n        this.player.unbind(\"play\", this.onPlay);\n        this.player.unbind(\"pause\", this.onPause);\n        this.player.unbind(\"seek\", this.onSeek);\n        this.player.unbind(\"end\", this.onEnded);\n        this.player.unbind(\"playbackratechange\", this.onPlaybackRateChange);\n    }\n    play() {\n        this.callPlayer(\"play\");\n    }\n    pause() {\n        this.callPlayer(\"pause\");\n    }\n    stop() {\n        this.unbind();\n        this.callPlayer(\"remove\");\n    }\n    seekTo(seconds) {\n        let keepPlaying = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n        this.callPlayer(\"time\", seconds);\n        if (!keepPlaying) {\n            this.pause();\n        }\n    }\n    setVolume(fraction) {\n        this.callPlayer(\"volume\", fraction);\n    }\n    setPlaybackRate(rate) {\n        this.callPlayer(\"playbackRate\", rate);\n    }\n    getDuration() {\n        return this.callPlayer(\"duration\");\n    }\n    getCurrentTime() {\n        return this.callPlayer(\"time\");\n    }\n    getSecondsLoaded() {\n        return null;\n    }\n    render() {\n        const { url } = this.props;\n        const videoID = url && url.match(import_patterns.MATCH_URL_WISTIA)[1];\n        const className = \"wistia_embed wistia_async_\".concat(videoID);\n        const style = {\n            width: \"100%\",\n            height: \"100%\"\n        };\n        return /* @__PURE__ */ import_react.default.createElement(\"div\", {\n            id: this.playerID,\n            key: videoID,\n            className,\n            style\n        });\n    }\n    constructor(){\n        var _this;\n        super(...arguments), _this = this;\n        __publicField(this, \"callPlayer\", import_utils.callPlayer);\n        __publicField(this, \"playerID\", this.props.config.playerId || \"\".concat(PLAYER_ID_PREFIX).concat((0, import_utils.randomString)()));\n        // Proxy methods to prevent listener leaks\n        __publicField(this, \"onPlay\", function() {\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            return _this.props.onPlay(...args);\n        });\n        __publicField(this, \"onPause\", function() {\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            return _this.props.onPause(...args);\n        });\n        __publicField(this, \"onSeek\", function() {\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            return _this.props.onSeek(...args);\n        });\n        __publicField(this, \"onEnded\", function() {\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            return _this.props.onEnded(...args);\n        });\n        __publicField(this, \"onPlaybackRateChange\", function() {\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            return _this.props.onPlaybackRateChange(...args);\n        });\n        __publicField(this, \"mute\", ()=>{\n            this.callPlayer(\"mute\");\n        });\n        __publicField(this, \"unmute\", ()=>{\n            this.callPlayer(\"unmute\");\n        });\n    }\n}\n__publicField(Wistia, \"displayName\", \"Wistia\");\n__publicField(Wistia, \"canPlay\", import_patterns.canPlay.wistia);\n__publicField(Wistia, \"loopOnEnded\", true);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-player/lib/players/Wistia.js\n"));

/***/ })

}]);